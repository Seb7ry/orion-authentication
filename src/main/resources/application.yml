# ===========================================
# ORION AUTH SERVICE - application.yml (dev/docker)
# ===========================================

server:
  port: ${AUTH_SERVICE_PORT:8091}
  forward-headers-strategy: framework

spring:
  application:
    name: ${AUTH_SERVICE_NAME:orion-auth}

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  # MongoDB Configuration - Uses centralized variables
  data:
    mongodb:
      uri: ${MONGODB_URI}

  # Google OAuth2 Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            scope: email,profile

  # Docker Compose (disabled by default)
  docker:
    compose:
      enabled: false

# JWT Configuration - Uses centralized variables
jwt:
  algorithm: ${JWT_ALGORITHM:RS256}
  issuer: ${JWT_ISSUER:orion-auth}
  audience: ${JWT_AUDIENCE:orion-services}
  access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:3600}
  refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:86400}
  private-key-path: ${JWT_PRIVATE_KEY_PATH:./keys/private.pem}
  public-key-path: ${JWT_PUBLIC_KEY_PATH:./keys/public.pem}

# External APIs Configuration (Direct)
api:
  student:
    url: ${STUDENT_API_URL}
  actor:
    url: ${ACTOR_API_URL}

# External Services Configuration - All from .env
orion:
  services:
    user-service-url: ${USER_SERVICE_URL}
    role-service-url: ${ROLE_SERVICE_URL}
    program-service-url: ${PROGRAM_SERVICE_URL}
    gateway-url: ${GATEWAY_URL}
    gateway-token: ${GATEWAY_SERVICE_TOKEN}
    connection-timeout: ${SERVICE_CONNECTION_TIMEOUT:5s}
    read-timeout: ${SERVICE_READ_TIMEOUT:10s}
    max-retries: ${SERVICE_MAX_RETRIES:3}
    retry-delay: ${SERVICE_RETRY_DELAY:500ms}

# Logging Configuration - Uses centralized variables
logging:
  level:
    com.unibague.gradework: ${LOG_LEVEL_AUTH:INFO}
    org.springframework.web: ${WEB_LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:INFO}
    org.springframework.data.mongodb: ${MONGODB_LOG_LEVEL:INFO}
    root: ${LOGGING_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

---
# ===========================================
# DEVELOPMENT PROFILE - Minimal overrides
# ===========================================
spring:
  config:
    activate:
      on-profile: dev

# Development-specific settings
logging:
  level:
    com.unibague.gradework: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.client: DEBUG

---
# ===========================================
# DOCKER PROFILE - Minimal overrides
# ===========================================
spring:
  config:
    activate:
      on-profile: docker

# All Docker configuration comes from environment variables
# No hardcoded values here

---
# ===========================================
# PRODUCTION PROFILE - Minimal overrides
# ===========================================
spring:
  config:
    activate:
      on-profile: prod

# Production-specific settings
logging:
  level:
    root: WARN
    com.unibague.gradework: INFO
    org.springframework.security: WARN